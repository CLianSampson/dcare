<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dcare.dao.TemperatureDO" >
  <resultMap id="BaseResultMap" type="com.dcare.po.Temperature" >
    <id column="userId" property="userId" jdbcType="INTEGER" />
    <id column="time" property="time" jdbcType="VARCHAR" />
    <id column="familyUserId" property="familyUserId" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.dcare.po.Temperature" extends="BaseResultMap" >
    <result column="temperature" property="temperature" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, time, familyUserId, createTime, updateTime
  </sql>
  <sql id="Blob_Column_List" >
    temperature
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="com.dcare.po.TemperatureKey" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from temperature
    where userId = #{userId}
      and time = #{time}
      and familyUserId = #{familyUserId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.dcare.po.TemperatureKey" >
    delete from temperature
    where userId = #{userId}
      and time = #{time}
      and familyUserId = #{familyUserId}
  </delete>
  <insert id="insert" parameterType="com.dcare.po.Temperature" >
    insert into temperature (userId, time, familyUserId, 
      createTime, updateTime, temperature
      )
    values (#{userId}, #{time}, #{familyUserId}, 
      #{createTime}, #{updateTime}, #{temperature}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dcare.po.Temperature" >
    insert into temperature
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        userId,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="familyUserId != null" >
        familyUserId,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="temperature != null" >
        temperature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId},
      </if>
      <if test="time != null" >
        #{time},
      </if>
      <if test="familyUserId != null" >
        #{familyUserId},
      </if>
      <if test="createTime != null" >
        #{createTime},
      </if>
      <if test="updateTime != null" >
        #{updateTime},
      </if>
      <if test="temperature != null" >
        #{temperature},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dcare.po.Temperature" >
    update temperature
    <set >
      <if test="createTime != null" >
        createTime = #{createTime},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime},
      </if>
      <if test="temperature != null" >
        temperature = #{temperature},
      </if>
    </set>
    where userId = #{userId}
      and time = #{time}
      and familyUserId = #{familyUserId}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.dcare.po.Temperature" >
    update temperature
    set createTime = #{createTime},
      updateTime = #{updateTime},
      temperature = #{temperature}
    where userId = #{userId}
      and time = #{time}
      and familyUserId = #{familyUserId}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.dcare.po.Temperature" >
    update temperature
    set createTime = #{createTime},
      updateTime = #{updateTime}
    where userId = #{userId}
      and time = #{time}
      and familyUserId = #{familyUserId}
  </update>
  
  
   <select id="selectByFamilyUerIdAndDate" resultMap="ResultMapWithBLOBs"  >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from temperature
    where
       1=1
       <if test="userId != null" >
        and userId = #{userId}
      </if>
      <if test="time != null">
        and time = #{time}
      </if>
      <if test ="familyUserId != null">
         and familyUserId = #{familyUserId}
      </if>
  </select>
  
</mapper>